version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: easyshop-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: easyshop
    networks:
      - easyshop-network

  redis:
    image: redis:latest
    container_name: easyshop-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - easyshop-network

  backend:
    image: iemafzal/easyshop-backend:v1
    container_name: easyshop-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/easyshop?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=http://localhost:3000
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
    depends_on:
      - mongodb
      - redis
    networks:
      - easyshop-network

  frontend:
    image: iemafzal/easyshop-frontend:v1
    container_name: easyshop-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - NEXT_PUBLIC_API_URL=http://localhost:4000/api/v1
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - backend
    networks:
      - easyshop-network

networks:
  easyshop-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: